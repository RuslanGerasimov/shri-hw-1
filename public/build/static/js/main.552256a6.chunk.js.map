{"version":3,"sources":["store/builds/types.ts","store/settings/reducers.ts","store/main/reducers.ts","store/builds/reducers.ts","store/build/reducers.ts","ui/Button/Button.tsx","services/axios.ts","store/settings/actions.ts","store/settings/actionTypes.ts","components/Header/Header.tsx","hoc/Layout/Layout-Content.tsx","ui/ActionCard/ActionCard.tsx","hoc/Theme/Theme.tsx","hoc/Layout/Layout.tsx","hoc/Layout/Layout-Wrapper.tsx","hoc/Layout/Layout-Footer.tsx","ui/IconLabel/IconLabel.tsx","components/Footer/Footer.tsx","containers/Page/Page.tsx","containers/Start/Start.tsx","ui/InputField/InputField.tsx","ui/Form/Form.tsx","ui/Form/validators/compulsory.js","ui/Form/validators/numbersOnly.js","components/SettingsForm/SettingsForm.tsx","containers/Settings/Settings.tsx","components/Log/Log.tsx","ui/Commit/Commit.tsx","services/formatter.ts","components/DetailCommit/DetailCommit.tsx","store/build/actions.ts","store/build/actionTypes.ts","containers/Build/Build.tsx","components/Commits/Commits.tsx","store/builds/actions.ts","store/builds/actionTypes.ts","ui/BackDrop/BackDrop.tsx","ui/Modal/Modal.tsx","ui/ModalBackDrop/ModalBackDrop.tsx","components/BuildForm/BuildForm.tsx","containers/Builds/Builds.tsx","containers/Start/Initialization.tsx","App.tsx","store/main/actions.ts","store/main/actionTypes.ts","serviceWorker.js","index.js"],"names":["BuildStatues","initialState","id","repo","mainBranch","command","interval","processIsGoing","appInitialized","builds","buttonTypes","status","New","start","duration","commitMessage","commitHash","branchName","authorName","buildNumber","apiAxiosInstance","axios","create","baseURL","fetchSettings","resolve","reject","dispatch","get","then","res","data","type","payload","repoName","buildCommand","period","catch","err","titleTypes","Button","props","onClickHandler","history","useHistory","buttonClassName","cn","buttonClass","large","primary","responsive","ButtonText","text","className","ButtonIcon","icon","link","push","clicked","onClick","disabled","role","classnames","mix","LayoutContent","mixedClass","mainClass","modificators","centered","mobileFull","top","noSpace","cmpClass","children","ActionCard","blockClass","imageClass","descClass","description","button","Theme","theme","default","Layout","layoutClass","LayoutWrapper","LayoutFooter","IconLabelTypes","Header","headerClass","headerTitleClass","headerButtonsClass","headerButtonClass","headerButtons","buttons","map","React","cloneElement","resultedBlockClass","title","logo","to","Footer","footerClass","footerContentClass","footerLinksClass","footerItemClass","footerCopyrightLinksClass","copyright","links","Array","isArray","item","index","key","Page","headerProps","header","Start","InputField","value","valueChanged","inputFieldClass","inputFieldLabelClass","inputBoxClass","inputElementFieldClass","inputFulfilled","length","compulsory","inline","error","htmlFor","label","clearIcon","showClear","onChange","ev","target","fulfilled","placeholder","bind","unit","Form","FormBlockClass","FormHeaderClass","FormHeaderItemClass","FormFooterClass","onSubmit","submitHandler","onReset","resetHandler","result","fields","input","formFieldClass","mod","topSpace","verticalSpace","valid","disableButtons","submit","submitText","reset","toString","match","connect","state","settings","actions","saveSettings","Promise","post","response","console","log","setValue","setProcessIsGoing","isGoing","useState","requestIsProcessing","success","processed","formState","setFormState","inputInitial","validators","numbersOnly","setError","inputs","isValid","validateInput","forEach","validationFunc","formIsInValid","reduce","undefined","preventDefault","settingsData","goBack","Settings","Log","IconLabel","iconClass","out","Commit","commitClass","commitContentClass","commitContentRowClass","commitItemClass","commitIdClass","commitDateBoxClass","commitDateClass","detail","number","branch","hex","substring","author","date","timeInterval","months","formatDate","dateObject","Date","day","getDate","month","getMonth","slice","hourInt","getHours","hour","minutesInt","getMinutes","minutes","formatDuration","hours","Math","floor","build","fetchBuild","buildId","useEffect","commitType","toLowerCase","formattedDate","rebuildDisabled","setRebuildDisabled","params","fetchBuilds","BackDrop","backDropClass","Modal","modalClass","ModalBackDrop","show","backDropClicked","BuildForm","commitHex","setCommitToBuild","setResult","isSuccess","buildModal","setBuildModal","closeModal","Initialization","initialized","main","settingsExists","initApp","settingsActions","path","component","Build","Builds","exact","Boolean","window","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.552256a6.chunk.js","sourcesContent":["export enum BuildStatues {\r\n    New = 'new',\r\n    Process = 'process',\r\n    Success = 'success',\r\n    Fail = 'fail',\r\n    Cancel = 'cancelled',\r\n}\r\n\r\nexport interface Build {\r\n    status: BuildStatues,\r\n    start: string,\r\n    duration: number,\r\n    buildNumber: number,\r\n    commitMessage: string,\r\n    branchName: string,\r\n    id: string,\r\n    authorName: string,\r\n    commitHash: string,\r\n}","import { GET_SETTINGS, SET_SETTING, SETTINGS_API_GOING} from './actionTypes';\r\nimport { SettingsState } from './type';\r\n\r\nconst initialState: SettingsState = {\r\n    id: '',\r\n    repo: '',\r\n    mainBranch: '',\r\n    command: '',\r\n    interval: '',\r\n    processIsGoing: false\r\n};\r\n\r\nexport default (state: SettingsState = initialState, { type, payload }: {type: string, payload: any}) => {\r\n    if(type === GET_SETTINGS) {\r\n        return {\r\n            ...state,\r\n            id: payload.id,\r\n            repo: payload.repo,\r\n            mainBranch: payload.mainBranch,\r\n            command: payload.command,\r\n            interval: payload.interval\r\n        }\r\n    } else if(type === SET_SETTING) {\r\n        return  {\r\n            ...state,\r\n            [payload.type]: payload.value\r\n        }\r\n    } else if(type === SETTINGS_API_GOING) {\r\n        return  {\r\n            ...state,\r\n            processIsGoing: payload.value\r\n        }\r\n    }\r\n\r\n    return  state;\r\n}","import { APP_INIT } from './actionTypes';\r\n\r\nconst initialState: { appInitialized: boolean } = {\r\n    appInitialized: false\r\n};\r\n\r\nexport default (state = initialState, { type }: { type: string }) => {\r\n    if(type === APP_INIT) {\r\n        return {\r\n            ...state,\r\n            appInitialized: true\r\n        }\r\n    }\r\n\r\n    return  state;\r\n}","import { SET_BUILDS } from './actionTypes';\r\nimport {Build} from \"./types\";\r\n\r\nconst initialState: {builds: Array<Build>} = {\r\n    builds: []\r\n};\r\n\r\nexport default (state = initialState, { type, payload }: { type: string, payload: { builds: Array<Build> } }) => {\r\n    if(type === SET_BUILDS) {\r\n        return {\r\n            ...state,\r\n            builds: payload.builds\r\n        }\r\n    }\r\n\r\n    return  state;\r\n}","import {SET_BUILD} from './actionTypes';\r\nimport {Build, BuildStatues} from \"../builds/types\";\r\n\r\nconst initialState: Build = {\r\n    status: BuildStatues.New,\r\n    start: '',\r\n    duration: 0,\r\n    commitMessage: '',\r\n    commitHash: '',\r\n    branchName: '',\r\n    id: '',\r\n    authorName: '',\r\n    buildNumber: 0\r\n};\r\n\r\nexport default (state: Build = initialState, {type, payload}: {type: string, payload: Build}) => {\r\n    if (type === SET_BUILD) {\r\n        return {\r\n            ...state,\r\n            ...payload\r\n        }\r\n    }\r\n\r\n    return state;\r\n}","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {cn} from \"@bem-react/classname\";\r\nimport {classnames} from \"@bem-react/classnames\";\r\n\r\nimport './Button.css';\r\nimport './Button-Icon.css';\r\nimport './Button-Icon_type_play.css';\r\nimport './Button-Icon_type_rebuild.css';\r\nimport './Button-Icon_type_settings.css';\r\nimport './Button-Text.css';\r\nimport './Button_large.css';\r\nimport './Button_primary.css';\r\nimport './Button_responsive.css';\r\n\r\nexport enum buttonTypes {\r\n    reset = 'reset',\r\n    button = 'button',\r\n    submit = 'submit'\r\n}\r\n\r\nexport interface ButtonProps {\r\n    large?: boolean,\r\n    primary?: boolean,\r\n    responsive?: boolean,\r\n    text?: string,\r\n    type?: string,\r\n    link?: string,\r\n    clicked?: () => void,\r\n    mix?: string,\r\n    disabled?: boolean,\r\n    role?: buttonTypes\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = (props) => {\r\n    const history = useHistory();\r\n    const buttonClass = cn('Button');\r\n    const buttonClassName = buttonClass({\r\n        large: !!props.large,\r\n        primary: !!props.primary,\r\n        responsive: !!props.responsive\r\n    });\r\n\r\n    const ButtonText = cn('Button', 'Text');\r\n    const text = props.text ? <span className={ButtonText()}>{props.text}</span> : null;\r\n\r\n    const ButtonIcon = cn('Button', 'Icon');\r\n    const icon = props.type ? <span className={ButtonIcon({type: props.type})}/> : null;\r\n    let onClickHandler;\r\n    if(props.link) {\r\n        // @ts-ignore\r\n        onClickHandler = () => { history.push(props.link) };\r\n    } else {\r\n        onClickHandler = props.clicked;\r\n    }\r\n\r\n    return (\r\n        <button onClick={onClickHandler}\r\n                disabled={props.disabled} type={props.role} className={classnames(buttonClassName, props.mix)}>\r\n            {icon}\r\n            {text}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import axios, {AxiosInstance} from 'axios';\r\n\r\nconst apiAxiosInstance: AxiosInstance = axios.create({\r\n    baseURL: 'http://localhost:3000/api'\r\n});\r\n\r\nexport default apiAxiosInstance;","import { GET_SETTINGS, SET_SETTING, SETTINGS_API_GOING} from './actionTypes';\r\nimport apiAxiosInstance from '../../services/axios';\r\nimport {Settings} from \"./type\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\nexport const fetchSettings = (resolve: (data: boolean) => void, reject: (status: string) => void) => {\r\n    return (dispatch: ThunkDispatch<any, any, any>) => {\r\n        apiAxiosInstance.get('/settings')\r\n            .then((res) => {\r\n                const data = res.data;\r\n                dispatch({\r\n                    type: GET_SETTINGS,\r\n                    payload: {\r\n                        id: data.id,\r\n                        repo: data.repoName,\r\n                        mainBranch: data.mainBranch,\r\n                        command: data.buildCommand,\r\n                        interval: data.period\r\n                    }\r\n                });\r\n                resolve(true);\r\n            })\r\n            .catch((err) => {\r\n                reject(err);\r\n            });\r\n    }\r\n};\r\n\r\n\r\nexport const saveSettings = (settings: Settings, resolve: (data: any) => void, reject: (errorStatus: string) => void) => {\r\n    return (dispatch: ThunkDispatch<any, any, any>) => {\r\n        apiAxiosInstance.post('/settings', {\r\n            repoName: settings.repo,\r\n            buildCommand: settings.command,\r\n            mainBranch: settings.mainBranch,\r\n            period: +settings.interval\r\n        }).then((result) => {\r\n            resolve(result.data);\r\n            dispatch({\r\n                type: GET_SETTINGS,\r\n                payload: {\r\n                    repo: settings.repo,\r\n                    mainBranch: settings.command,\r\n                    command: settings.mainBranch,\r\n                    interval: +settings.interval\r\n                }\r\n            });\r\n        }).catch((response) => {\r\n            reject(response.status);\r\n            console.log(response.data);\r\n        })\r\n    }\r\n};\r\n\r\nexport const setSetting = (type: string, value: string) => {\r\n    return {\r\n        type: SET_SETTING,\r\n        payload: {\r\n            type,\r\n            value\r\n        }\r\n    }\r\n};\r\n\r\nexport const setProcessIsGoing = (val?: boolean) => {\r\n    return {\r\n        type: SETTINGS_API_GOING,\r\n        payload: {\r\n            value: !!val\r\n        }\r\n    }\r\n};","export const GET_SETTINGS: string = 'GET_SETTINGS';\r\nexport const SET_SETTINGS: string = 'SET_SETTINGS';\r\nexport const SET_SETTING: string = 'SET_SETTING';\r\nexport const SETTINGS_API_GOING: string = 'SETTINGS_API_GOING';","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Header.css';\r\nimport './Header-Buttons.css';\r\nimport './Header-Button.css';\r\nimport './Header-Title.css';\r\nimport './Header-Title_logo.css';\r\n\r\nexport enum titleTypes {\r\n    logo = 'logo',\r\n    text = 'text'\r\n}\r\n\r\nexport interface HeaderProps {\r\n    buttons: Array<React.ReactElement>,\r\n    mix?: string,\r\n    title: {\r\n        type: titleTypes,\r\n        link?: string,\r\n        text: string\r\n    }\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = (props) => {\r\n    const headerClass = cn('Header');\r\n    const headerTitleClass = cn('Header', 'Title');\r\n    const headerButtonsClass = cn('Header', 'Buttons');\r\n    const headerButtonClass = cn('Header', 'Button');\r\n\r\n    const headerButtons = props.buttons ? (\r\n        <div className={headerButtonsClass()}>\r\n            {props.buttons.map((button) => React.cloneElement(button, {mix: headerButtonClass()}))}\r\n        </div>\r\n    ) : null;\r\n\r\n    const resultedBlockClass = classnames(headerClass(), props.mix);\r\n\r\n    return (\r\n        <div className={resultedBlockClass}>\r\n            {props.title.link ? (\r\n                <Link className={headerTitleClass({logo: props.title.type === 'logo'})}\r\n                      to={props.title.link}>{props.title.text}</Link>\r\n            ): (\r\n                <div className={headerTitleClass({logo: props.title.type === 'logo'})}>\r\n                    {props.title.text}\r\n                </div>\r\n            )}\r\n            {headerButtons}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {cn} from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Layout-Content.css';\r\nimport './Layout-Content_centered.css';\r\nimport './Layout-Content_mobileFull.css';\r\n\r\n\r\nexport interface LayoutContentProps {\r\n    mix?: string,\r\n    centered?: boolean,\r\n    mobileFull?: boolean,\r\n    top?: string,\r\n    noSpace?: string,\r\n}\r\n\r\ninterface modificators extends Record<any, any> {\r\n    centered: boolean,\r\n    mobileFull: boolean,\r\n    top: string,\r\n    noSpace?: string,\r\n}\r\n\r\nconst LayoutContent: React.FC<LayoutContentProps> = (props) => {\r\n    const mixedClass = props.mix;\r\n    const mainClass = cn('Layout', 'Content');\r\n\r\n    const modificators: modificators = {\r\n        centered: !!props.centered,\r\n        mobileFull: !!props.mobileFull,\r\n        top: props.top ? props.top : '',\r\n    };\r\n\r\n    if(props.noSpace) {\r\n        modificators.noSpace = props.noSpace;\r\n    }\r\n\r\n    if(props.top) {\r\n        modificators.top = props.top;\r\n    }\r\n\r\n    const cmpClass = classnames(mainClass(modificators), mixedClass);\r\n\r\n    return (\r\n        <div className={cmpClass}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport  default LayoutContent;","import React, { Fragment } from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport './ActionCard.css';\r\nimport './ActionCard-Button.css';\r\nimport './ActionCard-Description.css';\r\nimport './ActionCard-Image.css';\r\n\r\n\r\nconst ActionCard: React.FC<{ description?: string, button?:React.ReactElement }> = (props) => {\r\n    const blockClass = cn('ActionCard');\r\n    const imageClass = cn(blockClass(), 'Image');\r\n    const descClass = cn(blockClass(), 'Description');\r\n    const buttonClass = cn(blockClass(), 'Button');\r\n\r\n    return (\r\n        <div className={blockClass()}>\r\n            <div className={imageClass()} />\r\n            <div className={descClass()}>\r\n                {props.description ? props.description\r\n                    : <Fragment>Configure repository connection<br/> and synchronization settings</Fragment>}\r\n            </div>\r\n            {props.button ? (<div className={buttonClass()}>\r\n                {props.button}\r\n            </div>) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActionCard;","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport \"./Theme.css\"\r\nimport \"./Theme_default.css\"\r\n\r\nexport interface ThemeProps {\r\n    default?: boolean\r\n}\r\n\r\nconst Theme: React.FC<ThemeProps> = (props) => {\r\n    const theme = cn('Theme');\r\n\r\n    return (\r\n        <div className={theme({default: !!props.default})}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Theme;","import React from \"react\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Layout.css';\r\nimport './Layout-Header.css';\r\n\r\nconst Layout: React.FC<{ mix?: string }> = (props) => {\r\n    const mixedClass = props.mix ? props.mix : '';\r\n    const layoutClass = classnames(cn('Layout')(), mixedClass);\r\n\r\n    return (\r\n        <div className={layoutClass}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Layout-Wrapper.css';\r\n\r\ninterface LayoutWrapperProps {\r\n    mix?: string\r\n}\r\n\r\nconst LayoutWrapper: React.FC<LayoutWrapperProps> = (props) => {\r\n    const mixedClass = props.mix ? props.mix : '';\r\n    const cmpClass = classnames(cn('Layout', 'Wrapper')(), mixedClass);\r\n    return (\r\n        <div className={cmpClass}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport  default LayoutWrapper;","import React from \"react\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Layout-Footer.css';\r\n\r\nexport interface LayoutFooterProps {\r\n    mix?: string,\r\n}\r\n\r\nconst LayoutFooter: React.FC<LayoutFooterProps> = (props) => {\r\n    const mixedClass = props.mix;\r\n    const cmpClass = classnames(cn('Layout', 'Footer')(), mixedClass);\r\n\r\n    return (\r\n        <div className={cmpClass}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LayoutFooter;","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\nimport {classnames} from \"@bem-react/classnames\";\r\n\r\nimport './IconLabel.css';\r\nimport './IconLabel_large.css';\r\nimport './IconLabel_out.css';\r\nimport './IconLabel_type.css';\r\n\r\nexport enum IconLabelTypes {\r\n    author = 'author',\r\n    branch = 'branch',\r\n    date = 'date',\r\n    timeInterval = 'timeInterval',\r\n    success = 'success',\r\n    error = 'error',\r\n    waiting = 'waiting'\r\n}\r\n\r\nexport interface IconLabelProps {\r\n    large?: boolean,\r\n    out?: boolean,\r\n    type: IconLabelTypes,\r\n    mix?: string\r\n}\r\n\r\nconst IconLabel: React.FC<IconLabelProps> = (props) => {\r\n    const iconClass = cn('IconLabel')({\r\n        large: !!props.large,\r\n        out: !!props.out,\r\n        type: props.type\r\n    });\r\n    return (\r\n        <div className={classnames(iconClass, props.mix)}>{props.children}</div>\r\n    )\r\n};\r\n\r\nexport default IconLabel;","import React from \"react\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Footer.css';\r\nimport './Footer-Content.css';\r\nimport './Footer-Item.css';\r\nimport './Footer-Item_copyright.css';\r\nimport './Footer-Links.css';\r\nimport './Footer-Links_copyright.css';\r\n\r\nexport interface FooterProps {\r\n    mix?: string,\r\n    links: Array<{id: string|number, text: string}>,\r\n    copyright?: string\r\n}\r\n\r\nconst Footer: React.FC<FooterProps> = (props) => {\r\n    const footerClass = cn('Footer');\r\n    const footerContentClass = cn('Footer', 'Content');\r\n    const footerLinksClass = cn('Footer', 'Links');\r\n    const footerItemClass = cn('Footer', 'Item');\r\n    const footerCopyrightLinksClass = footerLinksClass({ copyright: true });\r\n\r\n    const resultedBlockClass = classnames(footerClass(), props.mix);\r\n\r\n    return (\r\n        <div className={resultedBlockClass}>\r\n            <div className={footerContentClass()}>\r\n                <div className={footerLinksClass()}>\r\n                    { props.links && Array.isArray(props.links) ?\r\n                        props.links.map((item, index) => <div key={item.id ? item.id : index} className={footerItemClass()}>{item.text}</div>)\r\n                        : null }\r\n                </div>\r\n                <div className={footerCopyrightLinksClass}>\r\n                    <div className={footerItemClass({copyright: true})}>\r\n                        {props.copyright ? props.copyright : \"© 2020 Your Name\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {ReactElement} from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport Theme from \"../../hoc/Theme/Theme\";\r\nimport Layout from \"../../hoc/Layout/Layout\";\r\nimport LayoutWrapper from \"../../hoc/Layout/Layout-Wrapper\";\r\nimport LayoutFooter from \"../../hoc/Layout/Layout-Footer\";\r\nimport Header, {HeaderProps, titleTypes} from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\n\r\nexport interface PageProps {\r\n    header: {\r\n        logo: boolean,\r\n        text: string,\r\n        link: string,\r\n        buttons: Array<ReactElement>\r\n    }\r\n}\r\n\r\nconst Page: React.FC<PageProps> = (props) => {\r\n    const headerProps: HeaderProps = {\r\n        buttons: props.header.buttons,\r\n        mix: cn('Layout', 'Header')(),\r\n        title: {\r\n            type: props.header.logo ? titleTypes.logo : titleTypes.text,\r\n            text: props.header.text,\r\n            link: props.header.link\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Theme default>\r\n            <Layout>\r\n                <Header title={headerProps.title} mix={headerProps.mix} buttons={headerProps.buttons} />\r\n                <LayoutWrapper>\r\n                    {props.children}\r\n                </LayoutWrapper>\r\n                <LayoutFooter>\r\n                    <Footer copyright={\"© 2020 Your Name\"}\r\n                            links={[{id: 'Support', text: 'Support'}, {id: \"Learning\", text: 'Learning'}]}/>\r\n                </LayoutFooter>\r\n            </Layout>\r\n        </Theme>\r\n    );\r\n};\r\n\r\nexport default Page;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport Button from \"../../ui/Button/Button\";\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport ActionCard from \"../../ui/ActionCard/ActionCard\";\r\nimport Page from \"../Page/Page\";\r\n\r\nconst Start: React.FC = () => {\r\n    const header = {\r\n        logo: true,\r\n        text: 'School CI Server',\r\n        link: '/',\r\n        buttons: [<Button link=\"/settings\" key=\"settings\" type=\"settings\" text=\"Settings\"/>]\r\n    };\r\n\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent centered>\r\n                <ActionCard\r\n                    button={<Link to=\"/settings\"><Button large primary text=\"Open settings\"/></Link>}\r\n                />\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default Start;","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport './InputField.css';\r\nimport './InputField_error.css';\r\nimport './InputField_compulsory.css';\r\nimport './InputField_inline.css';\r\nimport './InputField-Input.css';\r\nimport './InputField-ClearIcon.css';\r\nimport './InputField-InputBox.css';\r\nimport './InputField-InputBox_clearIcon.css';\r\nimport './InputField-Label.css';\r\nimport {InputWithValueChanged} from \"../../components/SettingsForm/SettingsForm\";\r\n\r\nconst InputField: React.FC<InputWithValueChanged> = (props) => {\r\n    const value = props.value ? props.value : '';\r\n    const valueChanged = (value: string) => {\r\n        props.valueChanged(value);\r\n    };\r\n\r\n    const inputFieldClass = cn('InputField');\r\n    const inputFieldLabelClass = cn(inputFieldClass(), 'Label')();\r\n    const inputBoxClass = cn(inputFieldClass(), 'InputBox');\r\n    const inputElementFieldClass = cn(inputFieldClass(), 'Input');\r\n\r\n    const inputFulfilled = value ? value.length > 0 : false;\r\n    return (\r\n        <div className={inputFieldClass({\r\n            compulsory: !!props.compulsory,\r\n            inline: !!props.inline,\r\n            error: !!props.error\r\n        })}>\r\n            <label htmlFor={props.id} className={inputFieldLabelClass}>{props.label}</label>\r\n            <div className={inputBoxClass({clearIcon: inputFulfilled && props.showClear})}>\r\n                <input id={props.id} type=\"text\"\r\n                       onChange={(ev) => { valueChanged(ev.target.value) }}\r\n                       value={value} className={inputElementFieldClass({fulfilled: inputFulfilled})}\r\n                       placeholder={props.placeholder} />\r\n                {props.showClear ? <div onClick={valueChanged.bind(null, '')} className={cn(inputFieldClass(), 'ClearIcon')()} /> : null}\r\n            </div>\r\n            {props.unit ? <div className={cn(inputFieldClass(), 'Unit')()}>{props.unit}</div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport './Form.css';\r\nimport './Form-Body.css';\r\nimport './Form-Button.css';\r\nimport './Form-Field.css';\r\nimport './Form-Field_verticalSpace_xs.css';\r\nimport './Form-Footer.css';\r\nimport './Form-Header.css';\r\nimport './Form-HeaderItem.css';\r\nimport './Form-HeaderItem_title.css';\r\nimport Button, {buttonTypes} from \"../Button/Button\";\r\nimport InputField from \"../InputField/InputField\";\r\nimport {Input, InputWithValueChanged} from \"../../components/SettingsForm/SettingsForm\";\r\n\r\nexport interface FormProps {\r\n    submitHandler: React.FormEventHandler,\r\n    resetHandler: React.FormEventHandler,\r\n    title: string,\r\n    description?: string,\r\n    result?: string,\r\n    fields: Array<InputWithValueChanged>,\r\n    disableButtons: boolean,\r\n    valid: boolean,\r\n    submitText?: string\r\n}\r\n\r\nconst Form: React.FC<FormProps> = (props) => {\r\n    const FormBlockClass = cn('Form')();\r\n    const FormHeaderClass = cn(FormBlockClass, 'Header')();\r\n    const FormHeaderItemClass = cn(FormBlockClass, 'HeaderItem');\r\n    const FormFooterClass = cn(FormBlockClass, 'Footer')();\r\n\r\n    return (\r\n        <form onSubmit={props.submitHandler} onReset={props.resetHandler} className={FormBlockClass}>\r\n            <div className={FormHeaderClass}>\r\n                <div className={FormHeaderItemClass({title: true})}>{props.title}</div>\r\n                <div className={FormHeaderItemClass()}>{props.description}</div>\r\n            </div>\r\n            {props.result ? (\r\n                <div className={cn('Form', 'Result')()}>{props.result}</div>\r\n            ) : null}\r\n            <div className=\"Form-Body\">\r\n                {props.fields.map((input) => {\r\n                    const formFieldClass = cn('Form', 'Field');\r\n                    const mod = input.topSpace ? {verticalSpace: 'xs'} : null;\r\n\r\n                    return (\r\n                        <div key={input.id} className={formFieldClass(mod)}>\r\n                            <InputField valueChanged={input.valueChanged} {...input}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className={FormFooterClass}>\r\n                <Button disabled={!props.valid || props.disableButtons} role={buttonTypes.submit}\r\n                        responsive\r\n                        large\r\n                        primary\r\n                        text={props.submitText ? props.submitText : 'Save'}\r\n                        mix={cn(FormBlockClass, 'Button')()}/>\r\n                <Button disabled={props.disableButtons} role={buttonTypes.reset} responsive large text=\"Cancel\" mix={cn(FormBlockClass, 'Button')()}/>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","export default (value) => {\r\n    return value !== null && typeof value !== 'undefined' && value.toString().length > 0\r\n}","export default (value) => {\r\n  if(typeof value !== 'string') {\r\n    value = value.toString();\r\n  }\r\n  return !value || value.match(/^\\d+$/);\r\n};","import React, {useState} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport * as actions from '../../store/settings/actions';\r\n\r\nimport Form from \"../../ui/Form/Form\";\r\nimport compulsory from \"../../ui/Form/validators/compulsory\";\r\nimport numbersOnly from \"../../ui/Form/validators/numbersOnly\";\r\nimport {Settings, SettingsState} from \"../../store/settings/type\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nexport interface SettingsFormProps extends SettingsState {\r\n    setValue: (id: string, value: string) => void,\r\n    setProcessIsGoing: (isGoing: boolean) => void,\r\n    saveSettings: (data: Settings) => Promise<any>,\r\n    fetchSettings: (resolve: () => void, reject: () => void) => void\r\n}\r\n\r\nexport interface Input {\r\n    validators?: Array<Validator>,\r\n    setError: (isValid: boolean) => void,\r\n    id: string,\r\n    label: string,\r\n    placeholder: string,\r\n    value: string,\r\n    showClear: boolean,\r\n    compulsory: boolean,\r\n    type: string,\r\n    inline?: boolean,\r\n    unit?: string,\r\n    topSpace?: boolean,\r\n    error: boolean,\r\n    valueChanged?: (val: string) => void\r\n}\r\n\r\nexport interface InputWithValueChanged extends Input{\r\n    valueChanged: (val: string) => void\r\n}\r\n\r\ntype Validator = (val: string) => boolean;\r\n\r\nconst SettingsForm: React.FC<SettingsFormProps> = (props) => {\r\n    const [formState, setFormState] = useState({ requestIsProcessing: false, success: false, processed: false });\r\n\r\n    const inputInitial = [\r\n        {\r\n            label: \"GitHub repository\",\r\n            placeholder: \"user-name/repo-name\",\r\n            showClear: true,\r\n            compulsory: true,\r\n            type: 'text',\r\n            id: 'repo',\r\n            error: useState(false),\r\n            value: props.repo,\r\n            validators : [\r\n                compulsory\r\n            ]\r\n        },\r\n        {\r\n            label: \"Build command\",\r\n            placeholder: \"enter command to run\",\r\n            value: props.command,\r\n            showClear: true,\r\n            compulsory: true,\r\n            type: 'text',\r\n            id: 'command',\r\n            error: useState(false),\r\n            validators : [\r\n                compulsory\r\n            ]\r\n        },\r\n        {\r\n            label: \"Main branch\",\r\n            placeholder: \"master\",\r\n            value: props.mainBranch,\r\n            showClear: true,\r\n            compulsory: false,\r\n            type: 'text',\r\n            id: 'mainBranch',\r\n            error: useState(false)\r\n        },\r\n        {\r\n            label: \"Synchronize every\",\r\n            placeholder: \"10\",\r\n            value: props.interval,\r\n            showClear: false,\r\n            compulsory: false,\r\n            type: 'text',\r\n            inline: true,\r\n            unit: 'minutes',\r\n            topSpace: true,\r\n            id: 'interval',\r\n            error: useState(false),\r\n            validators : [\r\n                numbersOnly\r\n            ]\r\n        },\r\n    ].map((input) => {\r\n        return {\r\n            ...input,\r\n            error: input.error[0],\r\n            setError: input.error[1],\r\n        }\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const changeValue: (input: Input) => InputWithValueChanged = (input: Input) => {\r\n        return {\r\n            ...input,\r\n            valueChanged: (value: string) => {\r\n                const isValid = input.validators ? validateInput(input.validators, value) : true;\r\n                props.setValue(input.id, value);\r\n                input.setError(!isValid);\r\n            }\r\n        }\r\n    };\r\n\r\n    const inputs = inputInitial.map(changeValue);\r\n\r\n    const validateInput = (validators: Array<(val: string) => boolean>, value: string) => {\r\n        let result = true;\r\n        if(validators && Array.isArray(validators)) {\r\n            validators.forEach((validationFunc) => {\r\n                const isValid = validationFunc(value);\r\n                if(!isValid) {\r\n                    result = false;\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const submitForm = (ev: React.FormEvent) => {\r\n        ev.preventDefault();\r\n        const formIsaValid = inputs.reduce((res: boolean, input: Input) => {\r\n            const isValid = input.validators ? validateInput(input.validators, input.value) : true;\r\n            input.setError(!isValid);\r\n            return isValid && res;\r\n        }, true);\r\n        if(formIsaValid) {\r\n            props.setProcessIsGoing(true);\r\n            setFormState({\r\n                ...formState,\r\n                requestIsProcessing: true\r\n            });\r\n\r\n            const settingsData: Settings = {\r\n                repo: props.repo,\r\n                command: props.command,\r\n                mainBranch: props.mainBranch,\r\n                interval: props.interval\r\n            };\r\n\r\n            props.saveSettings(settingsData).then(() => {\r\n                setFormState({\r\n                    processed: true,\r\n                    success: true,\r\n                    requestIsProcessing: false\r\n                });\r\n                props.setProcessIsGoing(false);\r\n            }).catch(() => {\r\n                setFormState({\r\n                    processed: true,\r\n                    success: false,\r\n                    requestIsProcessing: false\r\n                });\r\n                props.setProcessIsGoing(false);\r\n            });\r\n        }\r\n    };\r\n\r\n    const formIsInValid = inputs.reduce((res: boolean, input: Input) => input.error || res, false);\r\n    const resetForm = () => {\r\n        new Promise((resolve, reject) => {\r\n            props.fetchSettings(resolve, reject);\r\n        }).catch((res) => {\r\n            console.log(res);\r\n        });\r\n        history.goBack();\r\n    };\r\n\r\n    return (\r\n        <Form valid={!formIsInValid} title=\"Settings\"\r\n              result={formState.processed ?\r\n                  (formState.success ? \"Репозитроий клонирован успешно\" : \"Ошибка при клонировании репозитория\") : undefined}\r\n              disableButtons={props.processIsGoing}\r\n              submitHandler={submitForm}\r\n              resetHandler={resetForm}\r\n              description=\"Configure repository connection and synchronization settings.\"\r\n              fields={inputs}/>\r\n    )\r\n};\r\n\r\nconst mapsDispatchToProps = (dispatch: ThunkDispatch<any, any, any>) => {\r\n    return {\r\n        fetchSettings: (resolve: () => void, reject: () => void) => { dispatch(actions.fetchSettings(resolve, reject)) },\r\n        saveSettings: (data: Settings) => { return new Promise((resolve, reject) => {\r\n            dispatch(actions.saveSettings(data, resolve, reject));\r\n        }); },\r\n        setValue: (type: string, value: string) => {dispatch(actions.setSetting(type, value))},\r\n        setProcessIsGoing: (isGoing: boolean) => {dispatch(actions.setProcessIsGoing(isGoing))},\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: {settings: SettingsState}) => {\r\n    return {\r\n        repo: state.settings.repo,\r\n        mainBranch: state.settings.mainBranch,\r\n        command: state.settings.command,\r\n        interval: state.settings.interval,\r\n        processIsGoing: state.settings.processIsGoing\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(SettingsForm);","import React from 'react';\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport Page from \"../Page/Page\";\r\nimport SettingsForm from \"../../components/SettingsForm/SettingsForm\";\r\n\r\nconst Settings: React.FC = () => {\r\n    const header = {\r\n        logo: true,\r\n        text: 'School CI Server',\r\n        link: '/',\r\n        buttons: []\r\n    };\r\n\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent top=\"l\">\r\n                <SettingsForm/>\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\nimport Ansi from 'ansi-to-react';\r\n\r\n\r\nimport \"./Log.css\";\r\n\r\nconst Log: React.FC<{children: string}> = (props) => {\r\n    return (\r\n        <div  className={cn('Log')()} >\r\n            <Ansi>\r\n                {props.children}\r\n            </Ansi>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Log;","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport \"./Commit.css\";\r\nimport \"./Commit_detail.css\";\r\nimport \"./Commit-CommitId.css\";\r\nimport \"./Commit-Content.css\";\r\nimport \"./Commit-ContentRow.css\";\r\nimport \"./Commit-DateTime.css\";\r\nimport \"./Commit-DateTimeBox.css\";\r\nimport \"./Commit-Item.css\";\r\nimport \"./Commit-Item_author.css\";\r\nimport \"./Commit-Item_title.css\";\r\nimport IconLabel, {IconLabelTypes} from \"../../ui/IconLabel/IconLabel\";\r\n\r\nexport interface CommitProps {\r\n    clicked?: React.EventHandler<any>,\r\n    detail?: boolean,\r\n    type: any,\r\n    number: string|number,\r\n    description: string,\r\n    branch: string,\r\n    hex: string,\r\n    author: string,\r\n    date: string,\r\n    interval: string|number\r\n}\r\n\r\nconst Commit: React.FC<CommitProps> = (props) => {\r\n    const commitClass = cn('Commit');\r\n    const commitContentClass = cn(commitClass(), 'Content');\r\n    const commitContentRowClass = cn(commitClass(), 'ContentRow');\r\n    const commitItemClass = cn(commitClass(), 'Item');\r\n    const commitIdClass = cn(commitClass(), 'CommitId');\r\n    const commitDateBoxClass = cn(commitClass(), 'DateTimeBox');\r\n    const commitDateClass = cn(commitClass(), 'DateTime');\r\n\r\n    return (\r\n        <div onClick={props.clicked} className={commitClass({detail: !!props.detail})}>\r\n            <div className={commitContentClass()}>\r\n                <div className={commitContentRowClass()}>\r\n                    <IconLabel mix={commitItemClass()} large out type={props.type}>#{props.number}</IconLabel>\r\n                    <div className={commitItemClass({title: true})}>{props.description}</div>\r\n                </div>\r\n                <div className={commitContentRowClass()}>\r\n                    <div className={commitItemClass()}>\r\n                        <IconLabel type={IconLabelTypes.branch}>{props.branch}</IconLabel>\r\n                        <div className={commitIdClass()}>{props.hex ? props.hex.substring(0, 5): null}</div>\r\n                    </div>\r\n                    <IconLabel type={IconLabelTypes.author} mix={commitItemClass({author: true})}>{props.author}</IconLabel>\r\n                </div>\r\n            </div>\r\n            <div className={commitDateBoxClass()}>\r\n                <IconLabel type={IconLabelTypes.date} mix={commitDateClass()}>{props.date}</IconLabel>\r\n                <IconLabel type={IconLabelTypes.timeInterval} mix={commitDateClass({interval: true})}>\r\n                    {props.interval}\r\n                </IconLabel>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Commit;","const months = [\r\n    'январь',\r\n    'февраль',\r\n    'март',\r\n    'апрель',\r\n    'май',\r\n    'июнь',\r\n    'июль',\r\n    'август',\r\n    'сентябрь',\r\n    'октябрь',\r\n    'ноябрь',\r\n    'декабрь'\r\n];\r\n\r\nexport const formatDate: (date: string) => string = (date) => {\r\n    if(!date) {\r\n        return '';\r\n    }\r\n\r\n    const dateObject = new Date(date);\r\n    const day = dateObject.getDate();\r\n    const month = months[dateObject.getMonth()].slice(0, 3);\r\n    const hourInt = dateObject.getHours();\r\n    const hour: string = hourInt < 10 ? '0' + hourInt : hourInt.toString();\r\n    const minutesInt = dateObject.getMinutes();\r\n    const minutes: string = minutesInt < 10 ? '0' + minutesInt : minutesInt.toString();\r\n    return `${day} ${month}, ${hour}:${minutes}`;\r\n};\r\n\r\nexport const formatDuration: (d: string|number) => string = (duration) => {\r\n    if(!duration) {\r\n        return  '';\r\n    }\r\n    const hours = Math.floor(+duration / 60);\r\n    const minutes = +duration - hours * 60;\r\n    return `${hours} ч ${minutes} мин`;\r\n};","import React, {useEffect} from \"react\";\r\nimport * as actions from \"../../store/build/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Commit from \"../../ui/Commit/Commit\";\r\nimport {formatDate, formatDuration} from \"../../services/formatter\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {Build} from \"../../store/builds/types\";\r\n\r\n\r\nexport interface DetailCommitProps extends Build{\r\n    fetchBuild: (buildId: string) => void,\r\n}\r\n\r\nconst DetailCommit: React.FC<DetailCommitProps> = (props) => {\r\n    useEffect(() => {\r\n        props.fetchBuild(props.id);\r\n    }, [ props.id ]);\r\n\r\n    const commitType = props.status ? props.status.toLowerCase() : null;\r\n    const formattedDate = formatDate(props.start);\r\n    const duration = formatDuration(props.duration);\r\n\r\n\r\n    return commitType ? (<Commit\r\n        detail\r\n        number={props.buildNumber}\r\n        description={props.commitMessage}\r\n        branch={props.branchName}\r\n        hex={props.id}\r\n        author={props.authorName}\r\n        type={commitType}\r\n        date={formattedDate ? formattedDate : '-'}\r\n        interval={duration ? duration : '-'} />) : null;\r\n};\r\n\r\nconst mapsDispatchToProps = (dispatch: ThunkDispatch<any, any, any>) => {\r\n    return {\r\n        fetchBuild: (buildId: string) => { dispatch(actions.fetchBuild(buildId)) }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state: { build:Build }) => {\r\n    return {\r\n        status: state.build.status,\r\n        start: state.build.start,\r\n        duration: state.build.duration,\r\n        buildNumber: state.build.buildNumber,\r\n        commitMessage: state.build.commitMessage,\r\n        commitHash: state.build.commitHash,\r\n        branchName: state.build.branchName,\r\n        authorName: state.build.authorName\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(DetailCommit);","import apiAxiosInstance from \"../../services/axios\";\r\nimport { SET_BUILD } from './actionTypes';\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {Build} from \"../builds/types\";\r\n\r\nexport const fetchBuild = (buildId: string) => {\r\n    return (dispatch: ThunkDispatch<{type: string, payload: Build}, any, any>) => {\r\n        apiAxiosInstance.get('/builds/' + buildId)\r\n            .then(({data: build}) => {\r\n                dispatch({\r\n                    type: SET_BUILD,\r\n                    payload: build\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n};","export const SET_BUILD: string = 'SET_BUILD';","import React, {useEffect, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport Button, {buttonTypes} from \"../../ui/Button/Button\";\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport Log from \"../../components/Log/Log\";\r\nimport Page from \"../Page/Page\";\r\nimport DetailCommit from \"../../components/DetailCommit/DetailCommit\";\r\nimport apiAxiosInstance from \"../../services/axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {Build as BuildType} from \"../../store/builds/types\";\r\nimport {Settings} from \"../../store/settings/type\";\r\n\r\nconst data = {\r\n    type: 'success',\r\n    number: '1368',\r\n    description: 'add documentation for postgres scaler',\r\n    branch: 'master',\r\n    hex: '9c9f0b9',\r\n    author: 'Philip Kirkorov',\r\n    date: '21 янв, 03:06',\r\n    interval: '1 ч 20 мин',\r\n    log: `\\x1b[30mblack\\x1b[37mwhite`\r\n};\r\n\r\n\r\nexport interface BuildProps {\r\n    match: { params: { id: string } },\r\n    title: string,\r\n    commitHash: string\r\n}\r\n\r\nconst Build: React.FC<BuildProps> = (props) => {\r\n    const [rebuildDisabled, setRebuildDisabled] = useState(!props.commitHash);\r\n\r\n    useEffect(() => {\r\n        if (props.commitHash) {\r\n            setRebuildDisabled(false);\r\n        }\r\n    }, [props.commitHash]);\r\n\r\n    const history = useHistory();\r\n    const buildId = props.match.params.id;\r\n\r\n    const rebuild = () => {\r\n        apiAxiosInstance.post('/build/request', {commitHash: props.commitHash})\r\n            .then((result) => {\r\n                const id = result.data;\r\n                history.push('/build/' + id);\r\n            }).catch(() => {\r\n\r\n        })\r\n    };\r\n\r\n\r\n    const buttons = [\r\n        <Button disabled={rebuildDisabled} role={buttonTypes.button} text=\"Rebuild\" clicked={rebuild} key=\"rebuild\" type=\"rebuild\"/>,\r\n        <Button type=\"settings\" link=\"/settings\" role={buttonTypes.button} key=\"settings\"  disabled={false} />,\r\n    ];\r\n\r\n    const header = {\r\n        logo: false,\r\n        text: props.title ? props.title : 'philip1967/my-awesome-repo',\r\n        link: \"/\",\r\n        buttons: buttons\r\n    };\r\n\r\n\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent top=\"m\" noSpace=\"bottom\">\r\n                <DetailCommit id={buildId}/>\r\n            </LayoutContent>\r\n            <LayoutContent mobileFull noSpace=\"top\">\r\n                <Log>{data.log}</Log>\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: {settings: Settings, build: BuildType}) => {\r\n    return {\r\n        commitHash: state.build.commitHash,\r\n        title: state.settings.repo\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Build)","import React, {Fragment, useEffect} from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as actions from \"../../store/builds/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Commit from \"../../ui/Commit/Commit\";\r\nimport {formatDate, formatDuration} from '../../services/formatter';\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {Build} from \"../../store/builds/types\";\r\n\r\n\r\n\r\nexport interface CommitsPros {\r\n    fetchBuilds: () => void,\r\n    builds: Array<Build>\r\n}\r\n\r\nconst mapsDispatchToProps = (dispatch: ThunkDispatch<any, any, any>) => {\r\n    return {\r\n        fetchBuilds: () => { dispatch(actions.fetchBuilds()) }\r\n    }\r\n};\r\n\r\nconst Commits: React.FC<CommitsPros> = (props) => {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        props.fetchBuilds();\r\n    }, []);\r\n\r\n    const builds = props.builds.map((item) => {\r\n        const commitType = item.status.toLowerCase();\r\n        const formattedDate = formatDate(item.start);\r\n        const duration = formatDuration(item.duration);\r\n\r\n        return <Commit\r\n            number={item.buildNumber}\r\n            description={item.commitMessage}\r\n            branch={item.branchName}\r\n            hex={item.id}\r\n            author={item.authorName}\r\n            type={commitType}\r\n            date={formattedDate ? formattedDate : '-'}\r\n            interval={duration ? duration : '-'}\r\n            clicked={() => {history.push('/build/' + item.id)}}  key={item.id}/>;\r\n    });\r\n    return (\r\n        <Fragment>\r\n            {builds}\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: {builds: { builds: Array<Build> }}) => {\r\n    return {\r\n        builds: state.builds.builds\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(Commits);","import { SET_BUILDS } from './actionTypes';\r\nimport apiAxiosInstance from \"../../services/axios\";\r\nimport { ThunkAction} from 'redux-thunk';\r\n\r\nexport const fetchBuilds = (): ThunkAction<void, any, unknown, any> => {\r\n    return (dispatch) => {\r\n        apiAxiosInstance.get('/builds')\r\n            .then(({data: builds}) => {\r\n                dispatch({\r\n                    type: SET_BUILDS,\r\n                    payload: {\r\n                        builds: builds\r\n                    }\r\n                });\r\n            }).catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n};","export const SET_BUILDS: string = 'SET_BUILDS';","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\nimport './BackDrop.css';\r\n\r\nconst BackDrop: React.FC<{clicked: React.EventHandler<any> }> =  (props) => {\r\n    const backDropClass = cn('BackDrop');\r\n\r\n    return(\r\n        <div onClick={props.clicked} className={backDropClass()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BackDrop;","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport './Modal.css';\r\n\r\nconst Modal: React.FC<{ children: React.ReactNode }> = (props) => {\r\n    const modalClass = cn('Modal');\r\n\r\n    return (\r\n        <div className={modalClass()}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {Fragment} from \"react\";\r\nimport BackDrop from \"../BackDrop/BackDrop\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nconst ModalBackDrop: React.FC<{ show?: boolean, backDropClicked: React.EffectCallback }> = (props) => {\r\n    return props.show ? (\r\n        <Fragment>\r\n            <BackDrop clicked={props.backDropClicked} />\r\n            <Modal>\r\n                {props.children}\r\n            </Modal>\r\n        </Fragment>\r\n    ) : null;\r\n};\r\n\r\nexport default ModalBackDrop;","import React, {useState} from \"react\";\r\nimport apiAxiosInstance from \"../../services/axios\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Form from \"../../ui/Form/Form\";\r\nimport compulsory from \"../../ui/Form/validators/compulsory\";\r\n\r\nexport interface BuildFormProps {\r\n    resetHandler: React.FormEventHandler\r\n}\r\n\r\nconst BuildForm: React.FC<BuildFormProps> = (props) => {\r\n    const history = useHistory();\r\n    const [formState, setFormState] = useState({requestIsProcessing: false, success: false, processed: false});\r\n    const [commitHex, setCommitToBuild] = useState('');\r\n\r\n    const setProcessIsGoing = (isGoing?: boolean) => setFormState({\r\n        ...formState,\r\n        requestIsProcessing: !!isGoing\r\n    });\r\n    const setResult = (isSuccess?: boolean) => {\r\n        setFormState({\r\n            ...formState,\r\n            processed: true,\r\n            success: !!isSuccess\r\n        });\r\n    };\r\n\r\n\r\n    const inputInitial = [\r\n        {\r\n            label: \"Enter the commit hash you want to build\",\r\n            placeholder: \"Commit hash\",\r\n            showClear: true,\r\n            compulsory: true,\r\n            type: 'text',\r\n            id: 'commitHex',\r\n            error: useState(false),\r\n            value: commitHex,\r\n            setValue: setCommitToBuild,\r\n            validators: [\r\n                compulsory\r\n            ]\r\n        }\r\n    ].map((input) => {\r\n        return {\r\n            ...input,\r\n            error: input.error[0],\r\n            setError: input.error[1],\r\n        }\r\n    });\r\n\r\n\r\n    const inputs = inputInitial.map((input) => {\r\n        return {\r\n            ...input,\r\n            valueChanged: (value: string) => {\r\n                const isValid = validateInput(input.validators, value);\r\n                input.setValue(value);\r\n                input.setError(!isValid);\r\n            }\r\n        }\r\n    });\r\n\r\n    const validateInput = (validators: ((val: string) => boolean)[], value: string) => {\r\n        let result = true;\r\n        if (validators && Array.isArray(validators)) {\r\n            validators.forEach((validationFunc) => {\r\n                const isValid = validationFunc(value);\r\n                if (!isValid) {\r\n                    result = false;\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const submitForm = (ev: React.FormEvent) => {\r\n        ev.preventDefault();\r\n        setProcessIsGoing(true);\r\n        apiAxiosInstance.post('/build/request', { commitHash: commitHex})\r\n            .then((result) => {\r\n                setProcessIsGoing(false);\r\n                setResult(true);\r\n                const id = result.data;\r\n                history.push('/build/' + id);\r\n            }).catch(() => {\r\n                setProcessIsGoing(false);\r\n                setResult(false);\r\n            })\r\n    };\r\n\r\n    const formIsInValid = inputs.reduce((res, input) => input.error || res, false);\r\n    return (\r\n        <Form valid={!formIsInValid}\r\n              title=\"New build\"\r\n              result={formState.processed ?\r\n                  (formState.success ? \"Билд поставлен в очередь\" : \"Ошибка при попытке поставить билд а очередь\") : undefined}\r\n              disableButtons={formState.requestIsProcessing}\r\n              submitHandler={submitForm}\r\n              resetHandler={props.resetHandler}\r\n              submitText=\"Run Build\"\r\n              fields={inputs}/>\r\n    )\r\n};\r\n\r\nexport default BuildForm;","import React, {useState} from 'react';\r\n\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport Button from \"../../ui/Button/Button\";\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport Page from \"../Page/Page\";\r\nimport Commits from \"../../components/Commits/Commits\";\r\nimport ModalBackDrop from \"../../ui/ModalBackDrop/ModalBackDrop\";\r\nimport BuildForm from \"../../components/BuildForm/BuildForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {Settings} from \"../../store/settings/type\";\r\n\r\nconst Builds: React.FC<{title?: string}> = (props) => {\r\n    const [buildModal, setBuildModal] = useState(false);\r\n    const buttons = [\r\n        <Button text=\"Run build\" clicked={() => { setBuildModal(!buildModal) }} key=\"play\" type=\"play\" />,\r\n        <Button link=\"/settings\" type=\"settings\" key=\"settings\"  />,\r\n    ];\r\n\r\n    const modal = '';\r\n\r\n    const header = {\r\n        logo: false,\r\n        text: props.title ? props.title : 'philip1967/my-awesome-repo',\r\n        link: \"/\",\r\n        buttons: buttons\r\n    };\r\n\r\n    const closeModal = () => { setBuildModal(false) };\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent top=\"m\">\r\n                <Commits />\r\n                <ModalBackDrop show={buildModal} backDropClicked={closeModal}>\r\n                    <BuildForm resetHandler={closeModal} />\r\n                </ModalBackDrop>\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: { settings: Settings }) => {\r\n    return {\r\n        title: state.settings.repo\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Builds)","import React from 'react';\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport ActionCard from \"../../ui/ActionCard/ActionCard\";\r\nimport Page from \"../Page/Page\";\r\n\r\nconst Initialization: React.FC = () => {\r\n    const header = {\r\n        logo: true,\r\n        text: 'School CI Server',\r\n        link: '/',\r\n        buttons: []\r\n    };\r\n\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent centered>\r\n                <ActionCard\r\n                    description=\"Initialization\"/>\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default Initialization;","import React, {Fragment, useEffect} from 'react';\r\nimport {Switch, Route, BrowserRouter} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport * as actions from './store/main/actions';\r\nimport './style.css';\r\nimport './vars.css';\r\n\r\nimport Start from \"./containers/Start/Start\";\r\nimport Settings from \"./containers/Settings/Settings\";\r\nimport Build from \"./containers/Build/Build\";\r\nimport Builds from \"./containers/Builds/Builds\";\r\nimport Initialization from \"./containers/Start/Initialization\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\ninterface AppProps {\r\n    initApp: () => void,\r\n    initialized: boolean,\r\n    settingsExists: boolean\r\n}\r\n\r\nconst App: React.FC<AppProps> = (props) => {\r\n    useEffect(() => {\r\n        props.initApp();\r\n    });\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                {props.initialized ? (\r\n                    <Fragment>\r\n                        <Route path=\"/settings\" component={Settings}/>\r\n                        <Route path=\"/build/:id\" component={Build}/>\r\n                        <Route path=\"/logs\" component={Builds}/>\r\n                        <Route exact path=\"/\" component={props.settingsExists ? Builds : Start}/>\r\n                    </Fragment>\r\n                ) : (\r\n                    <Initialization/>\r\n                )}\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nconst mapsDispatchToProps = (dispatch: ThunkDispatch<any, any, any>) => {\r\n    return {\r\n        initApp: () => {\r\n            dispatch(actions.initApp())\r\n        }\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state: {main: { appInitialized: boolean }, settings: { id?: string }}) => {\r\n    return {\r\n        initialized: state.main.appInitialized,\r\n        settingsExists: !!state.settings.id\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(App);\r\n","import {APP_INIT} from './actionTypes';\r\nimport * as settingsActions from '../settings/actions';\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\nexport const initApp = () => {\r\n    return (dispatch: ThunkDispatch<any, any, any>) => {\r\n        const fetchPromise = new Promise(((resolve, reject) => {\r\n            dispatch(settingsActions.fetchSettings(resolve, reject));\r\n        }));\r\n        fetchPromise.then(() => {\r\n            dispatch({type: APP_INIT});\r\n        }).catch((err) => {\r\n            dispatch({type: APP_INIT});\r\n        })\r\n    }\r\n};","export const APP_INIT: string = 'APP_INIT';","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport settings from './store/settings/reducers';\r\nimport main from './store/main/reducers';\r\nimport builds from './store/builds/reducers';\r\nimport build from './store/build/reducers';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst reducer = combineReducers({\r\n    main: main,\r\n    settings: settings,\r\n    builds: builds,\r\n    build: build,\r\n});\r\n\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();"],"sourceRoot":""}