{"version":3,"sources":["store/settings/recucers.js","store/main/recucers.js","services/axios.js","store/settings/actions.js","store/settings/actionTypes.js","ui/Button/Button.js","hoc/Layout/Layout-Content.js","ui/ActionCard/ActionCard.js","hoc/Theme/Theme.js","hoc/Layout/Layout.js","hoc/Layout/Layout-Wrapper.js","hoc/Layout/Layout-Footer.js","components/Header/Header.js","components/Footer/Footer.js","containers/Page/Page.js","containers/Start/Start.js","ui/InputField/InputField.js","ui/Form/Form.js","ui/Form/validators/compulsory.js","ui/Form/validators/numbersOnly.js","components/SettingsForm/SettingsForm.js","containers/Settings/Settings.js","ui/IconLabel/IconLabel.js","ui/Commit/Commit.js","components/Log/Log.js","containers/Build/Build.js","containers/Builds/Builds.js","containers/Start/Initialization.js","App.js","store/main/actions.js","store/main/actionTypes.js","serviceWorker.js","index.js"],"names":["initialState","id","repo","mainBranch","command","interval","processIsGoing","appInitialized","apiAxiosInstance","axios","create","baseURL","fetchSettings","resolve","reject","dispatch","get","then","res","data","type","payload","repoName","buildCommand","period","catch","err","console","log","props","history","useHistory","buttonClassName","cn","buttonClass","large","primary","responsive","ButtonText","text","className","ButtonIcon","icon","onClick","link","push","clicked","disabled","role","classnames","mix","mixedClass","mainClass","modificators","centered","mobileFull","top","noSpace","cmpClass","children","blockClass","imageClass","descClass","description","button","theme","default","layoutClass","headerClass","headerTitleClass","headerButtonsClass","headerButtonClass","headerButtons","buttons","map","React","cloneElement","resultedBlockClass","title","logo","to","footerClass","footerContentClass","footerLinksClass","footerItemClass","footerCopyrightLinksClass","copyright","links","Array","isArray","item","index","key","header","Start","Page","value","valueChanged","inputFieldClass","inputFieldLabelClass","inputBoxClass","inputElementFieldClass","inputFulfilled","length","compulsory","inline","error","htmlFor","label","clearIcon","showClear","onChange","ev","target","fulfilled","placeholder","bind","unit","FormBlockClass","FormHeaderClass","FormHeaderItemClass","FormFooterClass","onSubmit","submitHandler","onReset","resetHandler","fields","input","formFieldClass","mod","topSpace","verticalSpace","setValue","result","valid","disableButtons","toString","match","connect","state","settings","actions","saveSettings","Promise","post","response","status","setProcessIsGoing","isGoing","useState","requestIsProcessing","success","processed","formState","setFormState","inputInitial","validators","numbersOnly","setError","inputs","isValid","validateInput","forEach","validationFunc","formIsInValid","reduce","preventDefault","goBack","Settings","iconClass","out","commitClass","commitContentClass","commitContentRowClass","commitItemClass","commitIdClass","commitDateBoxClass","commitDateClass","detail","number","branch","hex","substring","author","date","openDetail","Initialization","initialized","main","settingsExists","initApp","settingsActions","useEffect","path","component","Build","Builds","Boolean","window","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.01ccf564.chunk.js","sourcesContent":["import {SET_SETTINGS, GET_SETTINGS, SET_SETTING, SETTINGS_API_GOING} from './actionTypes';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    repo: '',\r\n    mainBranch: '',\r\n    command: '',\r\n    interval: '',\r\n    processIsGoing: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    if(type === GET_SETTINGS) {\r\n        return {\r\n            ...state,\r\n            id: payload.id,\r\n            repo: payload.repo,\r\n            mainBranch: payload.mainBranch,\r\n            command: payload.command,\r\n            interval: payload.interval\r\n        }\r\n    } else if(type === SET_SETTING) {\r\n        return  {\r\n            ...state,\r\n            [payload.type]: payload.value\r\n        }\r\n    } else if(type === SETTINGS_API_GOING) {\r\n        return  {\r\n            ...state,\r\n            processIsGoing: payload.value\r\n        }\r\n    }\r\n\r\n    return  state;\r\n}","import { APP_INIT } from './actionTypes';\r\n\r\nconst initialState = {\r\n    appInitialized: false\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n    if(type === APP_INIT) {\r\n        return {\r\n            ...state,\r\n            appInitialized: true\r\n        }\r\n    }\r\n\r\n    return  state;\r\n}","import axios from 'axios';\r\n\r\nconst apiAxiosInstance = axios.create({\r\n    baseURL: 'http://localhost:3000/api'\r\n});\r\n\r\nexport default apiAxiosInstance;","import {SET_SETTINGS, GET_SETTINGS, SET_SETTING, SETTINGS_API_GOING} from './actionTypes';\r\nimport apiAxiosInstance from '../../services/axios';\r\n\r\n\r\nexport const fetchSettings = (resolve, reject) => {\r\n    return (dispatch) => {\r\n        apiAxiosInstance.get('/settings')\r\n            .then((res) => {\r\n                const data = res.data;\r\n                dispatch({\r\n                    type: GET_SETTINGS,\r\n                    payload: {\r\n                        id: data.id,\r\n                        repo: data.repoName,\r\n                        mainBranch: data.mainBranch,\r\n                        command: data.buildCommand,\r\n                        interval: data.period\r\n                    }\r\n                });\r\n                resolve(true);\r\n            })\r\n            .catch((err) => {\r\n                reject(err);\r\n               console.log(err);\r\n            });\r\n    }\r\n};\r\n\r\nexport const saveSettings = ({repoName, buildCommand, mainBranch, period}, resolve, reject) => {\r\n    return (dispatch) => {\r\n        apiAxiosInstance.post('/settings', {\r\n            repoName,\r\n            buildCommand,\r\n            mainBranch,\r\n            period: +period\r\n        }).then((result) => {\r\n            resolve(result.data);\r\n            dispatch({\r\n                type: GET_SETTINGS,\r\n                payload: {\r\n                    repo: repoName,\r\n                    mainBranch: mainBranch,\r\n                    command: buildCommand,\r\n                    interval: period\r\n                }\r\n            });\r\n        }).catch((response) => {\r\n            reject(response.status);\r\n            console.log(response.data);\r\n        })\r\n    }\r\n};\r\n\r\nexport const setSetting = (type, value) => {\r\n    return {\r\n        type: SET_SETTING,\r\n        payload: {\r\n            type,\r\n            value\r\n        }\r\n    }\r\n};\r\n\r\nexport const setProcessIsGoing = (val) => {\r\n    return {\r\n        type: SETTINGS_API_GOING,\r\n        payload: {\r\n            value: !!val\r\n        }\r\n    }\r\n};","export const GET_SETTINGS = 'GET_SETTINGS';\r\nexport const SET_SETTINGS = 'SET_SETTINGS';\r\nexport const SET_SETTING = 'SET_SETTING';\r\nexport const SETTINGS_API_GOING = 'SETTINGS_API_GOING';","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { cn } from \"@bem-react/classname\";\r\nimport { classnames } from \"@bem-react/classnames\";\r\n\r\nimport './Button.css';\r\nimport './Button-Icon.css';\r\nimport './Button-Icon_type_play.css';\r\nimport './Button-Icon_type_rebuild.css';\r\nimport './Button-Icon_type_settings.css';\r\nimport './Button-Text.css';\r\nimport './Button_large.css';\r\nimport './Button_primary.css';\r\nimport './Button_responsive.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default (props) => {\r\n    const history = useHistory();\r\n    const buttonClass = cn('Button');\r\n    const buttonClassName = buttonClass({\r\n        large: !!props.large,\r\n        primary: !!props.primary,\r\n        responsive: !!props.responsive\r\n    });\r\n\r\n    const ButtonText = cn('Button', 'Text');\r\n    const text = props.text ? <span className={ButtonText()}>{props.text}</span> : null;\r\n\r\n    const ButtonIcon = cn('Button', 'Icon');\r\n    const icon = props.type ? <span className={ButtonIcon({ type: props.type })} /> : null;\r\n    return(\r\n        <button onClick={!props.link ? props.clicked : () => {history.push(props.link)}}\r\n                disabled={props.disabled} type={props.role} className={classnames(buttonClassName, props.mix)}>\r\n            {icon}\r\n            {text}\r\n        </button>\r\n    );\r\n};","import React from \"react\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Layout-Content.css';\r\nimport './Layout-Content_centered.css';\r\nimport './Layout-Content_mobileFull.css';\r\n\r\nexport  default (props) => {\r\n    const mixedClass = props.mix;\r\n    const mainClass = cn('Layout', 'Content');\r\n\r\n    const modificators = {\r\n        centered: !!props.centered,\r\n        mobileFull: !!props.mobileFull,\r\n        top: props.top,\r\n    };\r\n\r\n    if(props.noSpace) {\r\n        modificators.noSpace = props.noSpace;\r\n    }\r\n\r\n    if(props.top) {\r\n        modificators.top = props.top;\r\n    }\r\n\r\n    const cmpClass = classnames(mainClass(modificators), mixedClass);\r\n\r\n\r\n    return (\r\n        <div className={cmpClass}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React, { Fragment } from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport './ActionCard.css';\r\nimport './ActionCard-Button.css';\r\nimport './ActionCard-Description.css';\r\nimport './ActionCard-Image.css';\r\n\r\n\r\nexport default (props) => {\r\n    const blockClass = cn('ActionCard');\r\n    const imageClass = cn(blockClass(), 'Image');\r\n    const descClass = cn(blockClass(), 'Description');\r\n    const buttonClass = cn(blockClass(), 'Button');\r\n\r\n    return (\r\n        <div className={blockClass()}>\r\n            <div className={imageClass()} />\r\n            <div className={descClass()}>\r\n                {props.description ? props.description\r\n                    : <Fragment>Configure repository connection<br/> and synchronization settings</Fragment>}\r\n            </div>\r\n            {props.button ? (<div className={buttonClass()}>\r\n                {props.button}\r\n            </div>) : null}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { cn } from '@bem-react/classname';\r\n\r\nimport \"./Theme.css\"\r\nimport \"./Theme_default.css\"\r\n\r\nexport default (props) => {\r\n    const theme = cn('Theme');\r\n\r\n    return (\r\n        <div className={theme({default: !!props.default})}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Layout.css';\r\nimport './Layout-Header.css';\r\n\r\nexport default (props) => {\r\n    const mixedClass = props.mix;\r\n    const layoutClass = classnames(cn('Layout')(), mixedClass);\r\n\r\n    return (\r\n        <div className={layoutClass}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Layout-Wrapper.css';\r\n\r\nexport  default (props) => {\r\n    const mixedClass = props.mix;\r\n    const cmpClass = classnames(cn('Layout', 'Wrapper')(), mixedClass);\r\n    return (\r\n        <div className={cmpClass}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Layout-Footer.css';\r\n\r\nexport  default (props) => {\r\n    const mixedClass = props.mix;\r\n    const cmpClass = classnames(cn('Layout', 'Footer')(), mixedClass);\r\n\r\n    return (\r\n        <div className={cmpClass}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Header.css';\r\nimport './Header-Buttons.css';\r\nimport './Header-Button.css';\r\nimport './Header-Title.css';\r\nimport './Header-Title_logo.css';\r\n\r\n\r\nexport default (props) => {\r\n    const headerClass = cn('Header');\r\n    const headerTitleClass = cn('Header', 'Title');\r\n    const headerButtonsClass = cn('Header', 'Buttons');\r\n    const headerButtonClass = cn('Header', 'Button');\r\n\r\n    const headerButtons = props.buttons ? (\r\n        <div className={headerButtonsClass()}>\r\n            {props.buttons.map((button) => React.cloneElement(button, {mix: headerButtonClass()}))}\r\n        </div>\r\n    ) : null;\r\n\r\n    const resultedBlockClass = classnames(headerClass(), props.mix);\r\n\r\n    return (\r\n        <div className={resultedBlockClass}>\r\n            {props.title.link ? (\r\n                <Link className={headerTitleClass({logo: props.title.type === 'logo'})}\r\n                      to={props.title.link}>{props.title.text}</Link>\r\n            ): (\r\n                <div className={headerTitleClass({logo: props.title.type === 'logo'})}>\r\n                    {props.title.text}\r\n                </div>\r\n            )}\r\n            {headerButtons}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { cn } from '@bem-react/classname';\r\nimport { classnames } from '@bem-react/classnames';\r\n\r\nimport './Footer.css';\r\nimport './Footer-Content.css';\r\nimport './Footer-Item.css';\r\nimport './Footer-Item_copyright.css';\r\nimport './Footer-Links.css';\r\nimport './Footer-Links_copyright.css';\r\n\r\n\r\nexport default (props) => {\r\n    const footerClass = cn('Footer');\r\n    const footerContentClass = cn('Footer', 'Content');\r\n    const footerLinksClass = cn('Footer', 'Links');\r\n    const footerItemClass = cn('Footer', 'Item');\r\n    const footerCopyrightLinksClass = footerLinksClass({ copyright: true });\r\n\r\n    const resultedBlockClass = classnames(footerClass(), props.mix);\r\n\r\n    return (\r\n        <div className={resultedBlockClass}>\r\n            <div className={footerContentClass()}>\r\n                <div className={footerLinksClass()}>\r\n                    { props.links && Array.isArray(props.links) ?\r\n                        props.links.map((item, index) => <div key={item.id ? item.id : index} className={footerItemClass()}>{item.text}</div>)\r\n                        : null }\r\n                </div>\r\n                <div className={footerCopyrightLinksClass}>\r\n                    <div className={footerItemClass({copyright: true})}>\r\n                        {props.copyright ? props.copyright : \"© 2020 Your Name\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport Theme from \"../../hoc/Theme/Theme\";\r\nimport Layout from \"../../hoc/Layout/Layout\";\r\nimport LayoutWrapper from \"../../hoc/Layout/Layout-Wrapper\";\r\nimport LayoutFooter from \"../../hoc/Layout/Layout-Footer\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <Theme default>\r\n            <Layout>\r\n                <Header mix={cn('Layout', 'Header')()}\r\n                    title={{type: props.header.logo ? 'logo' : 'text', text: props.header.text, link: props.header.link}}\r\n                    buttons={props.header.buttons}/>\r\n                <LayoutWrapper>\r\n                    {props.children}\r\n                </LayoutWrapper>\r\n                <LayoutFooter>\r\n                    <Footer copyright={\"© 2020 Your Name\"}\r\n                            links={[{id: 'Support', text: 'Support'}, {id: \"Learning\", text: 'Learning'}]}/>\r\n                </LayoutFooter>\r\n            </Layout>\r\n        </Theme>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport Button from \"../../ui/Button/Button\";\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport ActionCard from \"../../ui/ActionCard/ActionCard\";\r\nimport Page from \"../Page/Page\";\r\n\r\nconst Start = () => {\r\n    const header = {\r\n        logo: true,\r\n        text: 'School CI Server',\r\n        link: '/',\r\n        buttons: [<Button link=\"/settings\" key=\"settings\" type=\"settings\" text=\"Settings\"/>]\r\n    };\r\n\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent centered>\r\n                <ActionCard\r\n                    button={<Link to=\"/settings\"><Button large primary text=\"Open settings\"/></Link>}\r\n                />\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default Start;","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport './InputField.css';\r\nimport './InputField_error.css';\r\nimport './InputField_compulsory.css';\r\nimport './InputField_inline.css';\r\nimport './InputField-Input.css';\r\nimport './InputField-ClearIcon.css';\r\nimport './InputField-InputBox.css';\r\nimport './InputField-InputBox_clearIcon.css';\r\nimport './InputField-Label.css';\r\n\r\nexport default (props) => {\r\n    const value = props.value ? props.value : '';\r\n    const valueChanged = (value) => {\r\n        props.valueChanged(value);\r\n    };\r\n\r\n    const inputFieldClass = cn('InputField');\r\n    const inputFieldLabelClass = cn(inputFieldClass(), 'Label')();\r\n    const inputBoxClass = cn(inputFieldClass(), 'InputBox');\r\n    const inputElementFieldClass = cn(inputFieldClass(), 'Input');\r\n\r\n    const inputFulfilled = value ? value.length > 0 : false;\r\n    return (\r\n        <div className={inputFieldClass({\r\n            compulsory: !!props.compulsory,\r\n            inline: !!props.inline,\r\n            error: !!props.error\r\n        })}>\r\n            <label htmlFor={props.id} className={inputFieldLabelClass}>{props.label}</label>\r\n            <div className={inputBoxClass({clearIcon: inputFulfilled && props.showClear})}>\r\n                <input id={props.id} type=\"text\"\r\n                       onChange={(ev) => { valueChanged(ev.target.value) }}\r\n                       value={value} className={inputElementFieldClass({fulfilled: inputFulfilled})}\r\n                       placeholder={props.placeholder} />\r\n                {props.showClear ? <div onClick={valueChanged.bind(null, '')} className={cn(inputFieldClass(), 'ClearIcon')()} /> : null}\r\n            </div>\r\n            {props.unit ? <div className={cn(inputFieldClass(), 'Unit')()}>{props.unit}</div> : null}\r\n        </div>\r\n    );\r\n}","import React  from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport './Form.css';\r\nimport './Form-Body.css';\r\nimport './Form-Button.css';\r\nimport './Form-Field.css';\r\nimport './Form-Field_verticalSpace_xs.css';\r\nimport './Form-Footer.css';\r\nimport './Form-Header.css';\r\nimport './Form-HeaderItem.css';\r\nimport './Form-HeaderItem_title.css';\r\nimport Button from \"../Button/Button\";\r\nimport InputField from \"../InputField/InputField\";\r\n\r\nexport default (props) => {\r\n    const FormBlockClass = cn('Form')();\r\n    const FormHeaderClass = cn(FormBlockClass, 'Header')();\r\n    const FormHeaderItemClass = cn(FormBlockClass, 'HeaderItem');\r\n    const FormFooterClass = cn(FormBlockClass, 'Footer')();\r\n\r\n    return (\r\n        <form onSubmit={props.submitHandler} onReset={props.resetHandler} className={FormBlockClass}>\r\n            <div className={FormHeaderClass}>\r\n                <div className={FormHeaderItemClass({title: true})}>{props.title}</div>\r\n                <div className={FormHeaderItemClass()}>{props.description}</div>\r\n            </div>\r\n            <div className=\"Form-Body\">\r\n                {props.fields.map((input) => {\r\n                    const formFieldClass = cn('Form', 'Field');\r\n                    const mod = input.topSpace ? {verticalSpace: 'xs'} : null;\r\n\r\n                    return (\r\n                        <div key={input.id} className={formFieldClass(mod)}>\r\n                            <InputField valueChanged={input.setValue} {...input}/>\r\n                        </div>\r\n                    )\r\n                })}\r\n                {props.result ? (\r\n                    <div className={cn('Form', 'Field')()}>{props.result}</div>\r\n                ) : null}\r\n            </div>\r\n            <div className={FormFooterClass}>\r\n                <Button disabled={!props.valid || props.disableButtons} role=\"submit\" responsive large primary text=\"Save\" mix={cn(FormBlockClass, 'Button')()}/>\r\n                <Button disabled={props.disableButtons} role=\"reset\" responsive large text=\"Cancel\" mix={cn(FormBlockClass, 'Button')()}/>\r\n            </div>\r\n        </form>\r\n    );\r\n}","export default (value) => {\r\n    return value !== null && typeof value !== 'undefined' && value.toString().length > 0\r\n}","export default (value) => {\r\n  if(typeof value !== 'string') {\r\n    value = value.toString();\r\n  }\r\n  return !value || value.match(/^\\d+$/);\r\n};","import React, { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport * as actions from '../../store/settings/actions';\r\n\r\nimport Form from \"../../ui/Form/Form\";\r\nimport compulsory from \"../../ui/Form/validators/compulsory\";\r\nimport numbersOnly from \"../../ui/Form/validators/numbersOnly\";\r\n\r\nconst SettingsForm = (props) => {\r\n    const [formState, setFormState] = useState({ requestIsProcessing: false, success: false, processed: false });\r\n\r\n    const inputInitial = [\r\n        {\r\n            label: \"GitHub repository\",\r\n            placeholder: \"user-name/repo-name\",\r\n            showClear: true,\r\n            compulsory: true,\r\n            type: 'text',\r\n            id: 'repo',\r\n            error: useState(false),\r\n            value: props.repo,\r\n            validators : [\r\n                compulsory\r\n            ]\r\n        },\r\n        {\r\n            label: \"Build command\",\r\n            placeholder: \"enter command to run\",\r\n            value: props.command,\r\n            showClear: true,\r\n            compulsory: true,\r\n            type: 'text',\r\n            id: 'command',\r\n            error: useState(false),\r\n            validators : [\r\n                compulsory\r\n            ]\r\n        },\r\n        {\r\n            label: \"Main branch\",\r\n            placeholder: \"master\",\r\n            value: props.mainBranch,\r\n            showClear: true,\r\n            compulsory: false,\r\n            type: 'text',\r\n            id: 'mainBranch',\r\n            error: useState(false)\r\n        },\r\n        {\r\n            label: \"Synchronize every\",\r\n            placeholder: \"10\",\r\n            value: props.interval,\r\n            showClear: false,\r\n            compulsory: false,\r\n            type: 'text',\r\n            inline: true,\r\n            unit: 'minutes',\r\n            topSpace: true,\r\n            id: 'interval',\r\n            error: useState(false),\r\n            validators : [\r\n                numbersOnly\r\n            ]\r\n        },\r\n    ].map((input) => {\r\n        return {\r\n            ...input,\r\n            error: input.error[0],\r\n            setError: input.error[1],\r\n        }\r\n    });\r\n\r\n    const history = useHistory();\r\n    const inputs = inputInitial.map((input) => {\r\n       return {\r\n           ...input,\r\n           valueChanged: (value) => {\r\n               const isValid = validateInput(input.validators, value);\r\n               props.setValue(input.id, value);\r\n               input.setError(!isValid);\r\n           }\r\n       }\r\n    });\r\n\r\n    const validateInput = (validators, value) => {\r\n        let result = true;\r\n        if(validators && Array.isArray(validators)) {\r\n            validators.forEach((validationFunc) => {\r\n                const isValid = validationFunc(value);\r\n                if(!isValid) {\r\n                    result = false;\r\n                }\r\n            })\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const submitForm = (ev) => {\r\n        ev.preventDefault();\r\n        const formIsaValid = inputs.reduce((res, input) => {\r\n            const isValid = validateInput(input.validators, input.value);\r\n            input.setError(!isValid);\r\n            return isValid && res;\r\n        }, true);\r\n        if(formIsaValid) {\r\n            props.setProcessIsGoing(true);\r\n            setFormState({\r\n                ...formState,\r\n                requestIsProcessing: true\r\n            });\r\n\r\n            props.saveSettings({\r\n                repoName: props.repo,\r\n                buildCommand: props.command,\r\n                mainBranch: props.mainBranch,\r\n                period: props.interval\r\n            }).then((res) => {\r\n                setFormState({\r\n                    processed: true,\r\n                    success: true,\r\n                    requestIsProcessing: false\r\n                });\r\n                props.setProcessIsGoing(false);\r\n            }).catch((err) => {\r\n                setFormState({\r\n                    processed: true,\r\n                    success: false,\r\n                    requestIsProcessing: false\r\n                });\r\n                props.setProcessIsGoing(false);\r\n            });\r\n        }\r\n    };\r\n\r\n    const formIsInValid = inputs.reduce((res, input) => input.error || res, false);\r\n\r\n    return (\r\n        <Form valid={!formIsInValid} title=\"Settings\"\r\n              result={formState.processed ?\r\n                  (formState.success ? \"Репозитроий клонирован успешно\" : \"Ошибка при клонировании репозитория\") : null}\r\n              disableButtons={props.processIsGoing}\r\n              submitHandler={submitForm}\r\n              resetHandler={() => { history.goBack() }}\r\n              description=\"Configure repository connection and synchronization settings.\"\r\n              fields={inputs}/>\r\n    )\r\n};\r\n\r\nconst mapsDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchSettings: () => { dispatch(actions.fetchSettings()) },\r\n        saveSettings: (data) => { return new Promise((resolve, reject) => {\r\n            dispatch(actions.saveSettings(data, resolve, reject));\r\n        }); },\r\n        setValue: (type, value) => {dispatch(actions.setSetting(type, value))},\r\n        setProcessIsGoing: (isGoing) => {dispatch(actions.setProcessIsGoing(isGoing))},\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        repo: state.settings.repo,\r\n        mainBranch: state.settings.mainBranch,\r\n        command: state.settings.command,\r\n        interval: state.settings.interval,\r\n        processIsGoing: state.settings.processIsGoing\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(SettingsForm);","import React from 'react';\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport Page from \"../Page/Page\";\r\nimport SettingsForm from \"../../components/SettingsForm/SettingsForm\";\r\n\r\nconst Settings = (props) => {\r\n    const header = {\r\n        logo: true,\r\n        text: 'School CI Server',\r\n        link: '/',\r\n        buttons: []\r\n    };\r\n\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent top=\"l\">\r\n                <SettingsForm />\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\nimport {classnames} from \"@bem-react/classnames\";\r\n\r\nimport './IconLabel.css';\r\nimport './IconLabel_large.css';\r\nimport './IconLabel_out.css';\r\nimport './IconLabel_type.css';\r\n\r\nexport default (props) => {\r\n    const iconClass = cn('IconLabel')({\r\n        large: !!props.large,\r\n        out: !!props.out,\r\n        type: props.type\r\n    });\r\n    return (\r\n        <div className={classnames(iconClass, props.mix)}>{props.children}</div>\r\n    )\r\n}","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport \"./Commit.css\";\r\nimport \"./Commit_detail.css\";\r\nimport \"./Commit-CommitId.css\";\r\nimport \"./Commit-Content.css\";\r\nimport \"./Commit-ContentRow.css\";\r\nimport \"./Commit-DateTime.css\";\r\nimport \"./Commit-DateTimeBox.css\";\r\nimport \"./Commit-Item.css\";\r\nimport \"./Commit-Item_author.css\";\r\nimport \"./Commit-Item_title.css\";\r\nimport IconLabel from \"../../ui/IconLabel/IconLabel\";\r\n\r\nexport default (props) => {\r\n    const commitClass = cn('Commit');\r\n    const commitContentClass = cn(commitClass(), 'Content');\r\n    const commitContentRowClass = cn(commitClass(), 'ContentRow');\r\n    const commitItemClass = cn(commitClass(), 'Item');\r\n    const commitIdClass = cn(commitClass(), 'CommitId');\r\n    const commitDateBoxClass = cn(commitClass(), 'DateTimeBox');\r\n    const commitDateClass = cn(commitClass(), 'DateTime');\r\n\r\n    return (\r\n        <div onClick={props.clicked} className={commitClass({detail: !!props.detail})}>\r\n            <div className={commitContentClass()}>\r\n                <div className={commitContentRowClass()}>\r\n                    <IconLabel mix={commitItemClass()} large out type={props.type}>#{props.number}</IconLabel>\r\n                    <div className={commitItemClass({title: true})}>{props.description}</div>\r\n                </div>\r\n                <div className={commitContentRowClass()}>\r\n                    <div className={commitItemClass()}>\r\n                        <IconLabel type=\"branch\">{props.branch}</IconLabel>\r\n                        <div className={commitIdClass()}>{props.hex ? props.hex.substring(0, 5): null}</div>\r\n                    </div>\r\n                    <IconLabel type=\"author\" mix={commitItemClass({author: true})}>{props.author}</IconLabel>\r\n                </div>\r\n            </div>\r\n            <div className={commitDateBoxClass()}>\r\n                <IconLabel type=\"date\" mix={commitDateClass()}>{props.date}</IconLabel>\r\n                <IconLabel type=\"timeInterval\" mix={commitDateClass({interval: true})}>\r\n                    {props.interval}\r\n                </IconLabel>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {cn} from \"@bem-react/classname\";\r\n\r\nimport \"./Log.css\";\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div className={cn('Log')()}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport Button from \"../../ui/Button/Button\";\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport Commit from \"../../ui/Commit/Commit\";\r\nimport Log from \"../../components/Log/Log\";\r\nimport Page from \"../Page/Page\";\r\n\r\nconst data = {\r\n    type: 'success',\r\n    number: '1368',\r\n    description: 'add documentation for postgres scaler',\r\n    branch: 'master',\r\n    hex: '9c9f0b9',\r\n    author: 'Philip Kirkorov',\r\n    date: '21 янв, 03:06',\r\n    interval: '1 ч 20 мин',\r\n    log: `Starting type checking and linting service...\r\n       Using 1 worker with 2048MB memory limit\r\n       Hash: d54ed20309f352b3bda76cbbb6d272ed6afde438bd7a265eb08db3624c32dfc883a8c379c67f4de6\r\n       Version: webpack 4.41.6\r\n       Child\r\n       Hash: d54ed20309f352b3bda7\r\n       Time: 40364ms\r\n       Built at: 2020-02-23 16:04:54\r\n       Asset      Size  Chunks             Chunk Names\r\n       0.bundle.static.css  1.31 MiB       0  [emitted]  vendors~main\r\n       0.bundle.static.js  10.3 MiB       0  [emitted]  vendors~main\r\n       bundle.static.css  48.6 KiB       1  [emitted]  main\r\n       bundle.static.js   613 KiB       1  [emitted]  main\r\n       static/media/Cat.afa2191f.svg  9.83 KiB          [emitted]\r\n       static/media/illustration.a17c1b18.svg  14.8 KiB          [emitted]\r\n       static/media/picture.eef6f3b8.svg  16.2 KiB          [emitted]\r\n       Entrypoint main = 0.bundle.static.css 0.bundle.static.js bundle.static.css bundle.static.js\r\n       [./node_modules/webpack/buildin/global.js] (webpack)/buildin/global.js 472 bytes {0} [built]\r\n       [./src/account/actions/index.ts] 2.46 KiB {1} [built]\r\n       [./src/account/api/lib/models/index.ts] 2.17 KiB {1} [built]\r\n       [./src/account/api/lib/models/mappers.ts] 21 KiB {1} [built]\r\n       [./src/account/api/lib/schoolaccountAPI.ts] 4.97 KiB {1} [built]\r\n       [./src/account/api/lib/schoolaccountAPIContext.ts] 1.73 KiB {1} [built]\r\n       [./src/account/epics/index.ts] 328 bytes {1} [built]\r\n       [./src/account/epics/pageData.ts] 834 bytes {1} [built]\r\n       [./src/account/epics/personalPage.ts] 2.29 KiB {1} [built]\r\n       [./src/account/epics/registrationForm.ts] 910 bytes {1} [built]\r\n       [./src/account/index.tsx] 561 bytes {1} [built]\r\n       [./src/account/reducers/githubRepos.ts] 837 bytes {1} [built]\r\n       [./src/account/reducers/index.ts] 1.83 KiB {1} [built]\r\n       [./src/account/reducers/serverError.ts] 526 bytes {1} [built]\r\n       [./src/account/store.ts] 1.05 KiB {1} [built]\r\n       + 1864 hidden modules\r\n       Child\r\n       Hash: 6cbbb6d272ed6afde438\r\n       Time: 32877ms\r\n       Built at: 2020-02-23 16:04:47\r\n       Asset      Size  Chunks             Chunk Names\r\n       server.js  6.34 MiB    main  [emitted]  main\r\n       Entrypoint main = server.js\r\n       [./src/account/actions/index.ts] 2.46 KiB {main} [built]\r\n       [./src/account/api/lib/models/index.ts] 2.17 KiB {main} [built]\r\n       [./src/account/api/lib/models/mappers.ts] 21 KiB {main} [built]\r\n       [./src/account/api/lib/schoolaccountAPI.ts] 4.97 KiB {main} [built]\r\n       [./src/account/api/lib/schoolaccountAPIContext.ts] 1.73 KiB {main} [built]\r\n       [./src/account/epics/index.ts] 328 bytes {main} [built]\r\n       [./src/account/epics/pageData.ts] 834 bytes {main} [built]\r\n       [./src/account/epics/personalPage.ts] 2.29 KiB {main} [built]\r\n       [./src/account/epics/registrationForm.ts] 910 bytes {main} [built]\r\n       [./src/account/mappers/index.ts] 2.18 KiB {main} [built]\r\n       [./src/account/reducers/githubRepos.ts] 837 bytes {main} [built]\r\n       [./src/account/reducers/index.ts] 1.83 KiB {main} [built]\r\n       [./src/account/reducers/serverError.ts] 526 bytes {main} [built]\r\n       [./src/account/server.tsx] 1.62 KiB {main} [built]\r\n       [./src/account/store.ts] 1.05 KiB {main} [built]\r\n       + 1484 hidden modules`\r\n};\r\n\r\n\r\nexport default (props) => {\r\n    const buttons = [\r\n        <Button text=\"Rebuild\" key=\"rebuild\" type=\"rebuild\" />,\r\n        <Button type=\"settings\" link=\"/settings\" key=\"settings\" />,\r\n    ];\r\n\r\n    const header = {\r\n        logo: false,\r\n        text: 'philip1967/my-awesome-repo',\r\n        buttons: buttons\r\n    };\r\n\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent top=\"m\" noSpace=\"bottom\">\r\n                <Commit {...data} detail />\r\n            </LayoutContent>\r\n            <LayoutContent mobileFull noSpace=\"top\">\r\n                <Log>{data.log}</Log>\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n};","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport Button from \"../../ui/Button/Button\";\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport Commit from \"../../ui/Commit/Commit\";\r\nimport Page from \"../Page/Page\";\r\n\r\nconst data = [\r\n    {\r\n        type: 'success',\r\n        number: '1368',\r\n        description: 'add documentation for postgres scaler',\r\n        branch: 'master',\r\n        hex: '9c9f0b9',\r\n        author: 'Philip Kirkorov',\r\n        date: '21 янв, 03:06',\r\n        interval: '1 ч 20 мин'\r\n    },\r\n    {\r\n        type: 'error',\r\n        number: '1367',\r\n        description: 'Super cool UI kit for making websites that look like games of old.',\r\n        branch: 'super-cool-ui-kit',\r\n        hex: '952e5567',\r\n        author: 'Vadim Makeev',\r\n        date: '21 янв, 03:06',\r\n        interval: '1 ч 20 мин'\r\n    },\r\n    {\r\n        type: 'waiting',\r\n        number: '1366',\r\n        description: 'upgrade typescript to 3.8',\r\n        branch: 'master',\r\n        hex: 'b4636ab',\r\n        author: 'Philip Kirkorov',\r\n        date: '21 янв, 03:06',\r\n        interval: '1 ч 20 мин'\r\n    }\r\n];\r\n\r\n\r\nexport default (props) => {\r\n    const history = useHistory();\r\n    const openDetail = (id) => {\r\n        history.push('/build/' + id);\r\n    };\r\n\r\n    const buttons = [\r\n        <Button text=\"Run build\" key=\"play\" type=\"play\" />,\r\n        <Button link=\"/settings\" type=\"settings\" key=\"settings\" />,\r\n    ];\r\n\r\n    const header = {\r\n        logo: false,\r\n        text: 'philip1967/my-awesome-repo',\r\n        buttons: buttons\r\n    };\r\n\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent top=\"m\">\r\n                {data.map((item) => <Commit clicked={openDetail.bind(null, item.hex)} {...item} key={item.hex}/>)}\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../style.css';\r\nimport '../../vars.css';\r\n\r\nimport Button from \"../../ui/Button/Button\";\r\nimport LayoutContent from \"../../hoc/Layout/Layout-Content\";\r\nimport ActionCard from \"../../ui/ActionCard/ActionCard\";\r\nimport Page from \"../Page/Page\";\r\n\r\nfunction Initialization() {\r\n    const header = {\r\n        logo: true,\r\n        text: 'School CI Server',\r\n        link: '/',\r\n        buttons: []\r\n    };\r\n\r\n    return (\r\n        <Page header={header}>\r\n            <LayoutContent centered>\r\n                <ActionCard\r\n                    description=\"Initialization\"\r\n                />\r\n            </LayoutContent>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default Initialization;","import React, {Fragment, useEffect} from 'react';\nimport {Switch, Route, BrowserRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\n\nimport * as actions from './store/main/actions';\nimport './style.css';\nimport './vars.css';\n\nimport Start from \"./containers/Start/Start\";\nimport Settings from \"./containers/Settings/Settings\";\nimport Build from \"./containers/Build/Build\";\nimport Builds from \"./containers/Builds/Builds\";\nimport Initialization from \"./containers/Start/Initialization\";\n\nconst App = (props) => {\n    useEffect(() => {\n        props.initApp();\n    });\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                {props.initialized ? (\n                    <Fragment>\n                        <Route path=\"/settings\" component={Settings}/>\n                        <Route path=\"/build/:id\" component={Build}/>\n                        <Route path=\"/logs\" component={Builds}/>\n                        <Route path=\"/\" component={props.settingsExists ? Builds : Start}/>\n                    </Fragment>\n                ) : (\n                    <Initialization/>\n                )}\n\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nconst mapsDispatchToProps = (dispatch) => {\n    return {\n        initApp: () => {\n            dispatch(actions.initApp())\n        }\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        initialized: state.main.appInitialized,\n        settingsExists: state.settings.id ? true : false\n    }\n};\n\nexport default connect(mapStateToProps, mapsDispatchToProps)(App);\n","import {APP_INIT} from './actionTypes';\r\nimport * as settingsActions from '../settings/actions';\r\n\r\n\r\nexport const initApp = () => {\r\n    return (dispatch) => {\r\n        const fetchPromise = new Promise(((resolve, reject) => {\r\n            dispatch(settingsActions.fetchSettings(resolve, reject));\r\n        }));\r\n        fetchPromise.then(() => {\r\n            dispatch({type: APP_INIT});\r\n        }).catch((err) => {\r\n            dispatch({type: APP_INIT});\r\n        })\r\n    }\r\n};","export const APP_INIT = 'APP_INIT';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport settings from './store/settings/recucers';\nimport main from './store/main/recucers';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducer = combineReducers({\n    main: main,\n    settings: settings\n});\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}